import { EventEmitter } from '@angular/core';
import { Ng2DropdownButton } from '../button/ng2-dropdown-button';
import { Ng2DropdownMenu } from '../menu/ng2-dropdown-menu';
import { DropdownStateService } from '../../services/dropdown-state.service';
import * as ɵngcc0 from '@angular/core';
export declare class Ng2Dropdown {
    private state;
    button: Ng2DropdownButton;
    menu: Ng2DropdownMenu;
    dynamicUpdate: boolean;
    onItemClicked: EventEmitter<string>;
    onItemSelected: EventEmitter<string>;
    onShow: EventEmitter<Ng2Dropdown>;
    onHide: EventEmitter<Ng2Dropdown>;
    constructor(state: DropdownStateService);
    ngOnInit(): void;
    /**
     * @name toggleMenu
     * @desc toggles menu visibility
     */
    toggleMenu(position?: ClientRect): void;
    /**
     * - hides dropdown
     * @name hide
     */
    hide(): void;
    /**
     * - shows dropdown
     * @name show
     * @param position
     */
    show(position?: ClientRect): void;
    /**
     * @name scrollListener
     */
    scrollListener(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Ng2Dropdown, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Ng2Dropdown, "ng2-dropdown", never, { "dynamicUpdate": "dynamicUpdate"; }, { "onItemClicked": "onItemClicked"; "onItemSelected": "onItemSelected"; "onShow": "onShow"; "onHide": "onHide"; }, ["button", "menu"], ["ng2-dropdown-button", "ng2-dropdown-menu"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmcyLWRyb3Bkb3duLmQudHMiLCJzb3VyY2VzIjpbIm5nMi1kcm9wZG93bi5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmcyRHJvcGRvd25CdXR0b24gfSBmcm9tICcuLi9idXR0b24vbmcyLWRyb3Bkb3duLWJ1dHRvbic7XG5pbXBvcnQgeyBOZzJEcm9wZG93bk1lbnUgfSBmcm9tICcuLi9tZW51L25nMi1kcm9wZG93bi1tZW51JztcbmltcG9ydCB7IERyb3Bkb3duU3RhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvZHJvcGRvd24tc3RhdGUuc2VydmljZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZzJEcm9wZG93biB7XG4gICAgcHJpdmF0ZSBzdGF0ZTtcbiAgICBidXR0b246IE5nMkRyb3Bkb3duQnV0dG9uO1xuICAgIG1lbnU6IE5nMkRyb3Bkb3duTWVudTtcbiAgICBkeW5hbWljVXBkYXRlOiBib29sZWFuO1xuICAgIG9uSXRlbUNsaWNrZWQ6IEV2ZW50RW1pdHRlcjxzdHJpbmc+O1xuICAgIG9uSXRlbVNlbGVjdGVkOiBFdmVudEVtaXR0ZXI8c3RyaW5nPjtcbiAgICBvblNob3c6IEV2ZW50RW1pdHRlcjxOZzJEcm9wZG93bj47XG4gICAgb25IaWRlOiBFdmVudEVtaXR0ZXI8TmcyRHJvcGRvd24+O1xuICAgIGNvbnN0cnVjdG9yKHN0YXRlOiBEcm9wZG93blN0YXRlU2VydmljZSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAbmFtZSB0b2dnbGVNZW51XG4gICAgICogQGRlc2MgdG9nZ2xlcyBtZW51IHZpc2liaWxpdHlcbiAgICAgKi9cbiAgICB0b2dnbGVNZW51KHBvc2l0aW9uPzogQ2xpZW50UmVjdCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogLSBoaWRlcyBkcm9wZG93blxuICAgICAqIEBuYW1lIGhpZGVcbiAgICAgKi9cbiAgICBoaWRlKCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogLSBzaG93cyBkcm9wZG93blxuICAgICAqIEBuYW1lIHNob3dcbiAgICAgKiBAcGFyYW0gcG9zaXRpb25cbiAgICAgKi9cbiAgICBzaG93KHBvc2l0aW9uPzogQ2xpZW50UmVjdCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQG5hbWUgc2Nyb2xsTGlzdGVuZXJcbiAgICAgKi9cbiAgICBzY3JvbGxMaXN0ZW5lcigpOiB2b2lkO1xufVxuIl19